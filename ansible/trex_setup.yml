- name: T-Rex Setup 
  hosts: trex
  vars_files:
    - ./test_settings.yml
  tasks:
  - debug: 
      msg: Debug mode is enabled
    when: redhat_debug_mode == true

########################################
# Install repositories on T-Rex server #
########################################

  - name: Install FedoraProject Repo
    yum:
      name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
  - name: Install needed repos stage 1
    yum:
      name: bc,emacs,gcc,git,lshw,pciutils,python3-devel,python3-pip 
  - name: Install needed repos stage 2
    yum:
      name: python3-setuptools,tmux,tuned-profiles-cpu-partitioning
  - name: Install needed repos stage 3
    yum:
      name: tar,wget,zeromq-devel,driverctl
  - name: Create symbolic link for python3 
    file:
      src: "/usr/bin/python3"
      dest: "/usr/bin/python"
      state: link
  - name: Create symbolic link for pip3
    file:
      src: "/usr/bin/pip3"
      dest: "/usr/bin/pip"
      state: link

######################################
# Check that nics are seen by kernel #
######################################

  - name: "Remove any existing driverctl overrides for first nic"
    shell: driverctl unset-override {{ trex_interface_1_pciid }}
  - name: "Remove any existing driverctl overrides for second nic"
    shell: driverctl unset-override {{ trex_interface_2_pciid }}
  - stat: path=/sys/class/net/{{ trex_interface_1 }}
    register: st
  - block:
    - name: "Checking that first nic is seen by kernel"
      debug:
        msg: "exiting as first nic {{ trex_interface_1 }} cannot be seen by the kernel.  Please check settings or unbind the nic from a dpdk driver using driverctl"
    - meta: end_play
    when: not st.stat.exists
  - stat: path=/sys/class/net/{{ trex_interface_2 }}
    register: st
  - block:
    - name: "Checking that second nic is seen by kernel"
      debug:
        msg: "exiting as second nic {{ trex_interface_2 }} cannot be seen by the kernel.  Please check settings or unbind the nic from a dpdk driver using driverctl"
    - meta: end_play
    when: not st.stat.exists 

#####################################################
# Modify startup parameters for hugepages and iommu #
#####################################################

  - name: Check grub defaults file before hugepage/iommu changes
    stat: path=/etc/default/grub
    register: grub_before
  - name: Changing existing hugepages in grub
    # Hugepages setting should follow hugepagesz setting on the kernel command-line
    lineinfile:
      path: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX=\"[^<]*\bhugepages=)(\d+)([^<]*\"$)'
      line: '\g<1>{{ trex_hugepages }}\g<3>'
      backrefs: true
  - name: Adding new hugepages in grub
    lineinfile:
      path: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX=\")((?![^<]*\bhugepages=\d+)[^<]*\"$)'
      line: '\g<1>hugepages={{ trex_hugepages }} \g<2>'
      backrefs: true
  - name: Changing existing hugepagesz in grub
    lineinfile:
      path: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX=\"[^<]*\bhugepagesz=)(\d+[gGkKmM])([^<]*\"$)'
      line: '\g<1>{{ trex_hugepagesz }}\g<3>'
      backrefs: true
  - name: Adding new hugepagesz in grub
    lineinfile:
      path: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX=\")((?![^<]*\bhugepagesz=\d+[gGkKmM])[^<]*\"$)'
      line: '\g<1>hugepagesz={{ trex_hugepagesz }} \g<2>'
      backrefs: true
  - name: Changing existing default_hugepagesz in grub
    lineinfile:
      path: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX=\"[^<]*\bdefault_hugepagesz=)(\d+[gGkKmM])([^<]*\"$)'
      line: '\g<1>{{ trex_default_hugepagesz }}\g<3>'
      backrefs: true
  - name: Adding new default_hugepagesz in grub
    lineinfile:
      path: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX=\")((?![^<]*\bdefault_hugepagesz=\d+[gGkKmM])[^<]*\"$)'
      line: '\g<1>default_hugepagesz={{ trex_default_hugepagesz }} \g<2>'
      backrefs: true
  - name: Changing existing iommu in grub
    lineinfile:
      path: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX=\"[^<]*\biommu=)([a-zA-Z]+)([^<]*\"$)'
      line: '\g<1>{{ trex_iommu_mode }}\g<3>'
      backrefs: true
    when: trex_iommu_mode != "none"
  - name: Adding new iommu in grub
    lineinfile:
      path: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX=\")((?![^<]*\biommu=[a-zA-Z]+)[^<]*\"$)'
      line: '\g<1>iommu={{ trex_iommu_mode }} \g<2>'
      backrefs: true
    when: trex_iommu_mode != "none"
  - name: Changing existing intel_iommu in grub (x86_64)
    lineinfile:
      path: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX=\"[^<]*\bintel_iommu=)([a-zA-Z_]+)([^<]*\"$)'
      line: '\g<1>{{ trex_intel_iommu_mode }}\g<3>'
      backrefs: true
    when: ansible_architecture == "x86_64"
  - name: Adding new intel_iommu in grub (x86_64)
    lineinfile:
      path: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX=\")((?![^<]*\bintel_iommu=[a-zA-Z_]+)[^<]*\"$)'
      line: '\g<1>intel_iommu={{ trex_intel_iommu_mode }} \g<2>'
      backrefs: true
    when: ansible_architecture == "x86_64"
  - name: Check for grub configuration changes (iommu/hugepages)
    stat: path=/etc/default/grub
    register: grub_after
  - name: Regenerating grub2 boot config file
    block:
      - name: Unset current grub environment kernelopts
        command: "grub2-editenv - unset kernelopts"
      - name: Rebuild grub configuration with new defaults
        command: "grub2-mkconfig -o /boot/grub2/grub.cfg"
    when: grub_before.stat.checksum != grub_after.stat.checksum
    tags: ["grub"]


#################
# Install T-Rex #
#################

  - name: Creating t-rex directory
    file:
      path: /root/trex
      state: directory
  - name: Checking that t-rex is downloaded
    stat:
      path: /root/trex/{{ trex_version }}
    register: stat_result
  - name: Downloading t-rex {{ trex_version }}
    when: stat_result.stat.exists == False
    get_url:
      url: "{{ trex_path }}/{{ trex_version }}.tar.gz"
      dest: /root/trex/{{ trex_version }}.tar.gz
  - name: Unzipping t-rex files
    when: stat_result.stat.exists == False
    unarchive:
      src: /root/trex/{{ trex_version }}.tar.gz
      dest: /root/trex
      copy: no
  - name: Running t-rex setup script (use mac mode)
    shell: python /root/trex/{{ trex_version }}/dpdk_setup_ports.py -c {{trex_interface_1}} {{trex_interface_2}} --force-mac -o /etc/trex_cfg.yaml
  - name: debug actions for t-rex setup
    shell: cat /etc/trex_cfg.yaml
    register: output
  - debug:
      var: output.stdout
    when: redhat_debug_mode == true
    
############################################
# Tune isolated cpus based on t-rex config #
############################################

  - name: Getting isolated core list
    shell: cat /etc/trex_cfg.yaml | grep threads | awk '{ print $2 }' | tr -d "[]"
    register: corelist
  - debug:
      var: corelist
    when: redhat_debug_mode == true
  - name: Check cpu-partitioning-variables.conf file before isolcpus changes
    stat: path=/etc/tuned/cpu-partitioning-variables.conf
    register: tuned_before
  - name: Adding/modifying isolcpus in cpu-partitioning-variables.conf
    # Changes the value if present, appends the value if missing
    lineinfile:
      path: /etc/tuned/cpu-partitioning-variables.conf
      regexp: '^isolated_cores=.*$'
      line: 'isolated_cores={{ corelist.stdout }}'
  - name: Check cpu-partitioning-variables.conf file for configuration changes
    stat: path=/etc/tuned/cpu-partitioning-variables.conf
    register: tuned_after
  - name: Enabling tuned
    shell: systemctl enable tuned
  - name: Starting tuned server
    shell: systemctl start tuned
  - name: Setting tuned to use cpu-partitioning
    shell: tuned-adm profile cpu-partitioning
  - name: Debugging actions for tuned setup
    when: redhat_debug_mode == true
    shell: cat /etc/tuned/cpu-partitioning-variables.conf
    register: output
  - debug:
      var: output.stdout
    when: redhat_debug_mode == true

###################################################
# Reboot t-rex system for settings to take effect #
###################################################

  - name: REBOOTING TREX SERVER NOW
    reboot:
    when: grub_before.stat.checksum != grub_after.stat.checksum or tuned_before.stat.checksum != tuned_after.stat.checksum

####################
# Getting NIC info #
####################

  - name: Binding nic {{ trex_interface_1 }} to driver {{ trex_driver }}
    shell: "driverctl -v set-override {{ trex_interface_1_pciid }} {{ trex_driver }}"
    ignore_errors: True
  - name: Binding nic {{ trex_interface_2 }} to driver {{ trex_driver }}
    shell: "driverctl -v set-override {{ trex_interface_2_pciid }} {{ trex_driver }}"
    ignore_errors: True

######################################
# Setup T-Rex server for pvp scripts #
######################################

  - name: Cloning git ovs_perf scripts
    git:
      repo: https://github.com/chaudron/ovs_perf.git
      clone: yes
      dest: /root/ovs_perf
  - name: Install modules from pip
    shell: pip install --upgrade enum34 natsort netaddr matplotlib scapy spur wheel numpy
  - name: Cloning git xena libraries
    git:
      repo: https://github.com/fleitner/XenaPythonLib
      clone: yes
      dest: /root/XenaPythonLib
  - name: Running setup for xena libraries
    shell: python setup.py install
    args:
      chdir: /root/XenaPythonLib
  - name: Checking that the t-rex_client is unzipped
    stat:
      path: /root/trex/{{ trex_version }}/trex_client_{{ trex_version }}
    register: stat_result
  - name: Unzipping trex_client files
    when: stat_result.stat.exists == False
    unarchive:
      src: /root/trex/{{ trex_version }}/trex_client_{{ trex_version }}.tar.gz
      dest: /root/trex/{{ trex_version }}
      copy: no
  - name: Copying t-rex client files step 1
    shell: cp -r /root/trex/{{ trex_version}}/trex_client/interactive/trex /root/ovs_perf/
  - name: Copying t-rex client files step 2
    shell: cp -r /root/trex/{{ trex_version}}/trex_client/external_libs /root/ovs_perf/trex/

#############################
# Create pvp results folder #
#############################

  - name: Removing previous pvp_results folder
    file:
      state: absent
      path: "~/pvp_results"
  - name: Creating new pvp_results folder
    file:
      state: directory
      path: "~/pvp_results"

    
